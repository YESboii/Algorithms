A monotonic stack is a specialized data structure used to maintain elements in either increasing or
decreasing order as they are processed, depending on the problem at hand.
 It is typically used to solve problems involving comparisons between elements,
  such as finding the next greater element or the next smaller element in an array.

Monotonic stacks are especially useful for problems where you need to process
 elements in an array while ensuring that certain conditions are maintained efficiently.
  By keeping the stack monotonic (increasing or decreasing), you can optimize problems that might
  otherwise require a brute-force solution with a time complexity of O(n^2) to O(n).

Types of Monotonic Stacks:
Monotonic Increasing Stack:
The elements in the stack are stored in increasing order.
This means that the top of the stack will always contain the smallest element,
 and as new elements are added, smaller elements are popped from the stack.

Monotonic Decreasing Stack:

The elements in the stack are stored in decreasing order.
This means that the top of the stack will always contain the largest element,
 and as new elements are added, larger elements are popped from the stack.
Use Cases of Monotonic Stacks:


Monotonic stacks are useful for problems like:

Next Greater Element: Find the next greater element for each element in an array.
Next Smaller Element: Find the next smaller element for each element in an array.
Largest Rectangle in Histogram: Find the largest rectangle that can be formed in a histogram.
Stock Span Problem: Find how many days a stock price was lower than the current day's price.